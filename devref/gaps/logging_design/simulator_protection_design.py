"""
NotebookSimulator Protection Mechanism Design

–•–æ—Ç—è NotebookSimulator —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º –æ—Ç Python logging,
–¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω—É—é "–∑–∞—â–∏—Ç—É" –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ API.
"""

from typing import Optional, Dict, Any
import logging


def apply_simulator_protection(config: Dict[str, Any], enabled: bool = True):
    """
    –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–∞—â–∏—Ç—É NotebookSimulator –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
    
    Args:
        config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        enabled: –í–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True)
        
    Note:
        –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ NotebookSimulator –Ω–µ–∑–∞–≤–∏—Å–∏–º –æ—Ç Python logging,
        –ø–æ—ç—Ç–æ–º—É —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–∞—è/–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è.
        
        –í –±—É–¥—É—â–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∞ –µ—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.
    """
    if not enabled:
        return config
    
    # –ö–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ - —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ª—é–±—ã–µ –ª–æ–≥–≥–µ—Ä—ã
    # —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å notebook/simulator –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—é—Ç—Å—è
    
    protected_patterns = [
        'notebook',
        'simulator', 
        'nb_',
        'script_'
    ]
    
    # –í modules_config –∏—Å–∫–ª—é—á–∞–µ–º protected –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    if 'modules_config' in config:
        modules_to_remove = []
        for module_name in config['modules_config']:
            if any(pattern in module_name.lower() for pattern in protected_patterns):
                modules_to_remove.append(module_name)
        
        for module_name in modules_to_remove:
            del config['modules_config'][module_name]
            print(f"üõ°Ô∏è Protected module '{module_name}' from logging configuration")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ –∑–∞—â–∏—Ç–µ
    config['_simulator_protection'] = {
        'enabled': True,
        'protected_patterns': protected_patterns,
        'note': 'NotebookSimulator uses independent logging (print + file)'
    }
    
    return config


def check_simulator_compatibility(logger_name: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ª–æ–≥–≥–µ—Ä–∞ —Å NotebookSimulator.
    
    Args:
        logger_name: –ò–º—è –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        True –µ—Å–ª–∏ –ª–æ–≥–≥–µ—Ä –±–µ–∑–æ–ø–∞—Å–µ–Ω –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        
    Note:
        –í—Å–µ BQuant –ª–æ–≥–≥–µ—Ä—ã ('bquant.*') –±–µ–∑–æ–ø–∞—Å–Ω—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏,
        —Ç–∞–∫ –∫–∞–∫ NotebookSimulator –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º—É—é —Å–∏—Å—Ç–µ–º—É.
    """
    # NotebookSimulator –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Python logging
    # –í—Å–µ bquant.* –ª–æ–≥–≥–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    
    if logger_name.startswith('bquant.'):
        return True
    
    # –ì–∏–ø–æ—Ç–µ—Ç–∏—á–µ—Å–∫–∏–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (–Ω–∞ –±—É–¥—É—â–µ–µ)
    unsafe_patterns = [
        'notebook_simulator',
        'nb_internal',
        'script_runner'
    ]
    
    for pattern in unsafe_patterns:
        if pattern in logger_name.lower():
            return False
    
    return True


def validate_logging_config(config: Dict[str, Any]) -> Dict[str, Any]:
    """
    –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å.
    
    Args:
        config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        
    Returns:
        –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    """
    validated_config = config.copy()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º modules_config
    if 'modules_config' in validated_config:
        safe_modules = {}
        
        for module_name, module_config in validated_config['modules_config'].items():
            if check_simulator_compatibility(module_name):
                safe_modules[module_name] = module_config
            else:
                print(f"‚ö†Ô∏è Skipping potentially incompatible module: {module_name}")
        
        validated_config['modules_config'] = safe_modules
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º exceptions
    if 'exceptions' in validated_config:
        safe_exceptions = {}
        
        for logger_name, level in validated_config['exceptions'].items():
            if check_simulator_compatibility(logger_name):
                safe_exceptions[logger_name] = level
            else:
                print(f"‚ö†Ô∏è Skipping potentially incompatible exception: {logger_name}")
        
        validated_config['exceptions'] = safe_exceptions
    
    return validated_config


# =============================================================================
# –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –í –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò
# =============================================================================

def enhanced_setup_logging_with_protection(
    modules_config: Optional[Dict] = None,
    simulator_protection: bool = True,
    **kwargs
):
    """
    –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–∞—â–∏—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.
    """
    config = {
        'modules_config': modules_config or {},
        **kwargs
    }
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞—â–∏—Ç—É
    if simulator_protection:
        config = apply_simulator_protection(config, enabled=True)
        config = validate_logging_config(config)
    
    # –ó–¥–µ—Å—å –±—ã–ª–∞ –±—ã –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ setup_logging
    print("üîß Applying enhanced logging configuration with protection")
    return config


# =============================================================================
# –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ò –ü–†–ò–ú–ï–†–´
# =============================================================================

"""
–ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:

# 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
setup_notebook_logging(
    modules_config={
        'bquant.data': {'console': 'WARNING'},
        'notebook_simulator': {'console': 'DEBUG'}  # <- –ë—É–¥–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    }
)

# 2. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–∞—â–∏—Ç—ã (–µ—Å–ª–∏ —Ç–æ—á–Ω–æ –∑–Ω–∞–µ—Ç–µ —á—Ç–æ –¥–µ–ª–∞–µ—Ç–µ)  
setup_notebook_logging(
    modules_config={...},
    simulator_protection=False  # –û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
)

# 3. Fluent API —Å –∑–∞—â–∏—Ç–æ–π
LoggingConfigurator()
    .preset('notebook') 
    .module('bquant.data').console('WARNING')
    .simulator_protection(True)  # –í–∫–ª—é—á–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    .apply()

–¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ó–ê–ú–ï–¢–ö–ê:
–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –±–æ–ª—å—à–µ –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–∞—è, —Ç–∞–∫ –∫–∞–∫ NotebookSimulator
—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º. –ù–æ –æ–Ω–∞ –ø–æ–ª–µ–∑–Ω–∞ –¥–ª—è:
- –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫
- –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏  
- –í–æ–∑–º–æ–∂–Ω—ã—Ö –±—É–¥—É—â–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
"""