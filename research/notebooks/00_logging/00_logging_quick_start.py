#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º BQuant

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≥–æ—Ç–æ–≤—ã–µ –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:
- –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞
- –ë–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- –ì–æ—Ç–æ–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–∏–ø–æ–≤—ã—Ö –∑–∞–¥–∞—á
"""

from bquant.core.logging_config import setup_logging, LoggingConfigurator
from bquant.core.nb import NotebookSimulator

# =============================================================================
# üöÄ –ì–û–¢–û–í–´–ï –ó–ê–ì–û–¢–û–í–ö–ò –î–õ–Ø –ë–´–°–¢–†–û–ì–û –°–¢–ê–†–¢–ê
# =============================================================================

def quick_research_setup():
    """–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è research —Å–∫—Ä–∏–ø—Ç–æ–≤"""
    setup_logging(profile='research')
    return "‚úÖ Research –ø—Ä–æ—Ñ–∏–ª—å: WARNING+ –≤ –∫–æ–Ω—Å–æ–ª—å, INFO+ –≤ —Ñ–∞–π–ª"

def quick_development_setup():
    """–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è development"""
    setup_logging(profile='verbose')
    return "‚úÖ Verbose –ø—Ä–æ—Ñ–∏–ª—å: DEBUG+ –≤–µ–∑–¥–µ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏"

def quick_production_setup():
    """–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è production"""
    setup_logging(profile='critical')
    return "‚úÖ Critical –ø—Ä–æ—Ñ–∏–ª—å: —Ç–æ–ª—å–∫–æ ERROR+ —Å–æ–æ–±—â–µ–Ω–∏—è"

def quick_clean_setup():
    """–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ç–∏—Ö–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    setup_logging(profile='clean')
    return "‚úÖ Clean –ø—Ä–æ—Ñ–∏–ª—å: ERROR+ –≤ –∫–æ–Ω—Å–æ–ª—å, INFO+ –≤ —Ñ–∞–π–ª"

# =============================================================================
# üîß –ì–û–¢–û–í–´–ï –ú–û–î–£–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
# =============================================================================

def data_modules_quiet():
    """–¢–∏—Ö–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è data –º–æ–¥—É–ª–µ–π"""
    setup_logging(
        modules_config={
            'bquant.data': {'console': 'WARNING', 'file': 'INFO'},
            'bquant.indicators': {'console': 'WARNING', 'file': 'INFO'},
            'bquant.analysis': {'console': 'INFO', 'file': 'INFO'}
        }
    )
    return "‚úÖ Data –º–æ–¥—É–ª–∏ —Ç–∏—Ö–∏–µ, analysis –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π"

def core_debug_others_info():
    """DEBUG –¥–ª—è core, INFO –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö"""
    setup_logging(
        modules_config={
            'bquant.core': {'console': 'DEBUG', 'file': 'DEBUG'},
            'bquant.data': {'console': 'INFO', 'file': 'INFO'},
            'bquant.indicators': {'console': 'INFO', 'file': 'INFO'},
            'bquant.analysis': {'console': 'INFO', 'file': 'INFO'}
        }
    )
    return "‚úÖ Core –º–æ–¥—É–ª–∏ –≤ DEBUG, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤ INFO"

def custom_data_analysis():
    """–ö–∞—Å—Ç–æ–º–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è data –∏ analysis"""
    setup_logging(
        modules_config={
            'bquant.data.loader': {'console': 'WARNING', 'file': 'DEBUG'},
            'bquant.data.processor': {'console': 'INFO', 'file': 'INFO'},
            'bquant.analysis.zones': {'console': 'DEBUG', 'file': 'DEBUG'},
            'bquant.analysis.candlestick': {'console': 'INFO', 'file': 'INFO'}
        }
    )
    return "‚úÖ –¢–æ—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–¥–º–æ–¥—É–ª–µ–π"

# =============================================================================
# üé≠ –ì–û–¢–û–í–´–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò –° –ò–°–ö–õ–Æ–ß–ï–ù–ò–Ø–ú–ò
# =============================================================================

def research_with_loader_debug():
    """Research –ø—Ä–æ—Ñ–∏–ª—å + loader –≤ DEBUG"""
    setup_logging(
        profile='research',
        exceptions={
            'bquant.data.loader': 'DEBUG',
            'bquant.core.nb': 'INFO'
        }
    )
    return "‚úÖ Research –ø—Ä–æ—Ñ–∏–ª—å + loader –≤ DEBUG + nb –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º"

def clean_with_analysis_info():
    """Clean –ø—Ä–æ—Ñ–∏–ª—å + analysis –≤ INFO"""
    setup_logging(
        profile='clean',
        exceptions={
            'bquant.analysis': 'INFO',
            'bquant.core.nb': 'INFO'
        }
    )
    return "‚úÖ Clean –ø—Ä–æ—Ñ–∏–ª—å + analysis –≤ INFO + nb –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º"

def critical_with_loader_warning():
    """Critical –ø—Ä–æ—Ñ–∏–ª—å + loader –≤ WARNING"""
    setup_logging(
        profile='critical',
        exceptions={
            'bquant.data.loader': 'WARNING',
            'bquant.core.nb': 'INFO'
        }
    )
    return "‚úÖ Critical –ø—Ä–æ—Ñ–∏–ª—å + loader –≤ WARNING + nb –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º"

# =============================================================================
# üöÄ –ì–û–¢–û–í–´–ï FLUENT API –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# =============================================================================

def fluent_notebook_research():
    """Fluent API –¥–ª—è notebook —Å research –ø—Ä–æ—Ñ–∏–ª–µ–º"""
    configurator = (
        LoggingConfigurator()
            .preset('notebook', 'research')
            .exception('bquant.data.loader', 'INFO')
            .apply()
    )
    return "‚úÖ Fluent API: notebook + research + loader INFO"

def fluent_development_focused():
    """Fluent API –¥–ª—è development —Å focused –ø—Ä–æ—Ñ–∏–ª–µ–º"""
    configurator = (
        LoggingConfigurator()
            .preset('development', 'focused')
            .module('bquant.data').console('WARNING').file('INFO')
            .apply()
    )
    return "‚úÖ Fluent API: development + focused + data WARNING"

def fluent_production_audit():
    """Fluent API –¥–ª—è production —Å audit –ø—Ä–æ—Ñ–∏–ª–µ–º"""
    configurator = (
        LoggingConfigurator()
            .preset('production', 'audit')
            .exception('bquant.core.nb', 'INFO')
            .apply()
    )
    return "‚úÖ Fluent API: production + audit + nb INFO"

# =============================================================================
# üìã –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–°–ï–• –ó–ê–ì–û–¢–û–í–û–ö
# =============================================================================

def demo_all_quick_starts():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –≥–æ—Ç–æ–≤—ã—Ö –∑–∞–≥–æ—Ç–æ–≤–æ–∫"""
    nb = NotebookSimulator("–î–µ–º–æ –≥–æ—Ç–æ–≤—ã—Ö –∑–∞–≥–æ—Ç–æ–≤–æ–∫")
    
    print("üöÄ –ì–û–¢–û–í–´–ï –ó–ê–ì–û–¢–û–í–ö–ò –î–õ–Ø –ë–´–°–¢–†–û–ì–û –°–¢–ê–†–¢–ê")
    print("=" * 60)
    
    # –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
    nb.step("–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏")
    print(quick_research_setup())
    print(quick_development_setup())
    print(quick_production_setup())
    print(quick_clean_setup())
    
    # –ú–æ–¥—É–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    nb.step("–ú–æ–¥—É–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print(data_modules_quiet())
    print(core_debug_others_info())
    print(custom_data_analysis())
    
    # –ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏
    nb.step("–ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏")
    print(research_with_loader_debug())
    print(clean_with_analysis_info())
    print(critical_with_loader_warning())
    
    # Fluent API
    nb.step("Fluent API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print(fluent_notebook_research())
    print(fluent_development_focused())
    print(fluent_production_audit())
    
    nb.success("–í—Å–µ –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú BQUANT")
    print("=" * 60)
    print("üí° –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≥–æ—Ç–æ–≤—ã–µ –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
    print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –≤–∞—à –∫–æ–¥ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ!")
    print("=" * 60)
    
    demo_all_quick_starts()
    
    print(f"\n{'='*60}")
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 60)
    print("üí° –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞!")
    print("üìö –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: docs/api/core/logging.md")

if __name__ == "__main__":
    main()
