#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è BQuant

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏:
- research: —Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ data –º–æ–¥—É–ª–µ–π
- clean: –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ (—Ç–æ–ª—å–∫–æ ERROR+)
- debug: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è
- verbose: DEBUG –≤–µ–∑–¥–µ
- focused: DEBUG –¥–ª—è core, INFO –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
- critical: —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
- audit: –ø–æ–ª–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª, –º–∏–Ω–∏–º—É–º –≤ –∫–æ–Ω—Å–æ–ª—å
"""

from bquant.core.logging_config import setup_logging
from bquant.core.nb import NotebookSimulator

def demo_profile(profile_name, description):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
    print(f"\n{'='*60}")
    print(f"üéØ –ü–†–û–§–ò–õ–¨: {profile_name.upper()}")
    print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
    print(f"{'='*60}")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º
    setup_logging(profile=profile_name)
    
    # –°–æ–∑–¥–∞–µ–º NotebookSimulator –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    nb = NotebookSimulator(f"–î–µ–º–æ –ø—Ä–æ—Ñ–∏–ª—è {profile_name}")
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω—ã)
    nb.info(f"–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è '{profile_name}'")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ª–æ–≥–æ–≤
    from bquant.data.loader import load_ohlcv_data
    from bquant.indicators.macd import calculate_macd
    from bquant.analysis.zones import find_support_resistance
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    nb.step("–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ WARNING/ERROR
        data = load_ohlcv_data('nonexistent_file.csv', 'XAUUSD', '1h')
        nb.success("–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        nb.warning(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
    nb.step("–†–∞—Å—á–µ—Ç MACD")
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        import pandas as pd
        import numpy as np
        dates = pd.date_range('2024-01-01', periods=100, freq='D')
        test_data = pd.DataFrame({
            'close': np.random.randn(100).cumsum() + 100
        }, index=dates)
        
        macd_result = calculate_macd(test_data)
        nb.success("MACD —Ä–∞—Å—Å—á–∏—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        nb.error(f"–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ MACD: {e}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∑–æ–Ω
    nb.step("–ê–Ω–∞–ª–∏–∑ –∑–æ–Ω")
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ OHLCV –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∑–æ–Ω
        test_ohlcv = pd.DataFrame({
            'open': np.random.randn(100).cumsum() + 100,
            'high': np.random.randn(100).cumsum() + 101,
            'low': np.random.randn(100).cumsum() + 99,
            'close': np.random.randn(100).cumsum() + 100,
            'volume': np.random.randint(1000, 10000, 100)
        }, index=dates)
        
        zones_result = find_support_resistance(test_ohlcv)
        nb.success(f"–ê–Ω–∞–ª–∏–∑ –∑–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–∞–π–¥–µ–Ω–æ {len(zones_result)} –∑–æ–Ω")
    except Exception as e:
        nb.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–æ–Ω: {e}")
    
    nb.success(f"–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è '{profile_name}' –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å '{profile_name}' –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–§–ò–õ–ï–ô –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø BQUANT")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    profiles = [
        ('research', '–°–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ data –º–æ–¥—É–ª–µ–π (WARNING+ –≤ –∫–æ–Ω—Å–æ–ª—å)'),
        ('clean', '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ (ERROR+ –≤ –∫–æ–Ω—Å–æ–ª—å)'),
        ('debug', '–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ä–µ–∂–∏–º (DEBUG+ –≤–µ–∑–¥–µ)'),
        ('verbose', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è (DEBUG+ –≤–µ–∑–¥–µ)'),
        ('focused', 'DEBUG –¥–ª—è core, INFO –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö'),
        ('critical', '–¢–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è (ERROR+)'),
        ('audit', '–ü–æ–ª–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª, –º–∏–Ω–∏–º—É–º –≤ –∫–æ–Ω—Å–æ–ª—å')
    ]
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
    for profile_name, description in profiles:
        demo_profile(profile_name, description)
    
    print(f"\n{'='*60}")
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–°–ï–• –ü–†–û–§–ò–õ–ï–ô –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 60)
    print("üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –≤–∞—à–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è!")
    print("üìö –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: docs/api/core/logging.md")

if __name__ == "__main__":
    main()
