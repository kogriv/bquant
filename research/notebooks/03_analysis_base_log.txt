[LOG] Log started: 2025-10-27 10:28:06
[OUTPUT] Output will be written to: research/notebooks/03_analysis_base_log.txt
[>>] Starting Изучаем AnalysisResult, BaseAnalyzer и фабрику анализаторов
===============================================================================
[SCRIPT] Изучаем AnalysisResult, BaseAnalyzer и фабрику анализаторов
[DATE] Started: 2025-10-27 10:28:06
===============================================================================
================================================================================
[STEP] STEP 1: Шаг 1: Инициализация и обзор
------------------------------------
[INFO] Изучаем базовые классы пакета bquant.analysis
Поддерживаемые типы анализа: ['statistical', 'zones', 'technical', 'chart', 'candlestick', 'timeseries']
  - statistical: Статистический анализ данных и гипотез
  - zones: Анализ зон и паттернов
  - technical: Технический анализ индикаторов
  - chart: Графический анализ и паттерны
  - candlestick: Анализ свечных паттернов
  - timeseries: Временной анализ данных
================================================================================
[STEP] STEP 2: Шаг 2: Работа с AnalysisResult
--------------------------------------
[INFO] Создаем и настраиваем объекты AnalysisResult
Создан простой результат анализа:
  - Тип: simple_test
  - Размер данных: 1000
  - Время создания: 2025-10-27 10:28:06.341261
  - Ключи результатов: ['total_points', 'success_rate', 'avg_duration']
  - Метаданные: {'version': '1.0', 'author': 'demo'}
[OK] Creating AnalysisResult objects completed successfully
================================================================================
[STEP] STEP 3: Шаг 3: Методы AnalysisResult
------------------------------------
[INFO] Тестируем методы AnalysisResult
3.1. Конвертация в словарь:
  - Результат: {'analysis_type': 'simple_test', 'timestamp': '2025-10-27T10:28:06.341261', 'data_size': 1000, 'results': {'total_points': 1000, 'success_rate': 0.85, 'avg_duration': 2.5}, 'metadata': {'version': '1.0', 'author': 'demo'}}
3.2. Строковое представление:
  - str(): AnalysisResult(simple_test, 1000 points, 2025-10-27 10:28:06.341261)
  - repr(): AnalysisResult(type='simple_test', data_size=1000, results_keys=['total_points', 'success_rate', 'avg_duration'], timestamp='2025-10-27 10:28:06.341261')
3.3. Сохранение в CSV:
  - Результат сохранен в simple_analysis_result.csv
  - Файл создан успешно, размер: 53 байт
  - Тестовый файл удален
[OK] Testing AnalysisResult methods completed successfully
================================================================================
[STEP] STEP 4: Шаг 4: Создание BaseAnalyzer
------------------------------------
[INFO] Создаем и настраиваем базовый анализатор
Создан базовый анализатор:
  - Имя: DemoAnalyzer
  - Конфигурация: {'min_data_points': 50, 'max_data_points': 10000, 'enable_logging': True, 'cache_results': True}
  - Логгер: bquant.analysis.DemoAnalyzer
[OK] Creating BaseAnalyzer completed successfully
================================================================================
[STEP] STEP 5: Шаг 5: Валидация данных
-------------------------------
[INFO] Тестируем валидацию данных в BaseAnalyzer
5.1. Создание тестовых данных:
  - Валидные данные: (100, 2), колонки: ['price', 'volume']
  - Пустые данные: (0, 0)
  - Маленькие данные: (3, 1)
5.2. Тестирование валидации:
  - Валидные данные: True
  - Пустые данные: False
  - Маленькие данные: False
[OK] Testing data validation completed successfully
================================================================================
[STEP] STEP 6: Шаг 6: Подготовка данных
--------------------------------
[INFO] Тестируем подготовку данных в BaseAnalyzer
6.1. Создание неотсортированных данных:
  - Неотсортированные данные: (100, 2)
  - Первые 3 индекса: [Timestamp('2024-01-03 08:00:00'), Timestamp('2024-01-03 05:00:00'), Timestamp('2024-01-02 00:00:00')]
6.2. Подготовка данных:
  - Подготовленные данные: (100, 2)
  - Первые 3 индекса: [Timestamp('2024-01-01 00:00:00'), Timestamp('2024-01-01 01:00:00'), Timestamp('2024-01-01 02:00:00')]
  - Отсортированы: True
[OK] Testing data preparation completed successfully
================================================================================
[STEP] STEP 7: Шаг 7: Создание пользовательского анализатора
-----------------------------------------------------
[INFO] Создаем пользовательский анализатор на основе BaseAnalyzer
Создан пользовательский анализатор:
  - Имя: CustomPriceAnalyzer
  - Порог цены: 100.0
  - Конфигурация: {'price_threshold': 100.0, 'min_data_points': 10}
[OK] Creating custom analyzer completed successfully
================================================================================
[STEP] STEP 8: Шаг 8: Использование пользовательского анализатора
----------------------------------------------------------
[INFO] Тестируем пользовательский анализатор на реальных данных
8.1. Выполнение анализа:
  - Тип анализа: custom_price_analysis
  - Размер данных: 100
  - Время анализа: 2025-10-27 10:28:06.355228
8.2. Результаты анализа:
  - Всего точек: 100
  - Выше порога: 88 (88.0%)
  - Ниже порога: 12
  - Статистика цен:
    * mean: 111.33
    * std: 6.70
    * min: 98.52
    * max: 122.50
8.3. Метаданные:
  - analyzer: CustomPriceAnalyzer
  - price_threshold: 100.0
  - analysis_timestamp: 2025-10-27T10:28:06.355213
[OK] Testing custom analyzer completed successfully
================================================================================
[STEP] STEP 9: Шаг 9: Фабрика анализаторов
-----------------------------------
[INFO] Тестируем фабрику анализаторов и получение списка доступных
9.1. Список доступных анализаторов:
  - statistical: Комплексный статистический анализ
  - hypothesis: Тестирование статистических гипотез
  - correlation: Корреляционный анализ
  - distribution: Анализ распределений
  - zone: Комплексный анализ зон поддержки/сопротивления
  - support_resistance: Анализ уровней поддержки и сопротивления
  - macd_zones: Анализ MACD зон
  - price_action: Price action анализ (заглушка)
  - technical: Технический анализ (заглушка)
  - patterns: Графические паттерны (заглушка)
  - divergences: Анализ дивергенций (заглушка)
  - signals: Технические сигналы (заглушка)
  - candlestick: Анализ свечных паттернов (заглушка)
  - reversal: Паттерны разворота (заглушка)
  - continuation: Паттерны продолжения (заглушка)
  - doji: Доджи паттерны (заглушка)
  - timeseries: Анализ временных рядов (заглушка)
  - trend: Трендовый анализ (заглушка)
  - seasonality: Анализ сезонности (заглушка)
  - forecasting: Прогнозирование (заглушка)
  - volatility: Анализ волатильности (заглушка)
  - chart: Графический анализ (заглушка)
  - trendlines: Трендовые линии (заглушка)
  - formations: Графические формации (заглушка)
9.2. Создание анализатора через фабрику:
  - Создан анализатор: statistical
  - Тип: BaseAnalyzer
  - Конфигурация: {'alpha': 0.05}
[OK] Testing analyzer factory completed successfully
================================================================================
[STEP] STEP 10: Шаг 10: Интеграция и экспорт
-------------------------------------
[INFO] Демонстрируем интеграцию и экспорт результатов
10.1. Создание множественных результатов:
  - Создан анализ с порогом 95.0: custom_price_analysis
  - Создан анализ с порогом 100.0: custom_price_analysis
  - Создан анализ с порогом 105.0: custom_price_analysis
10.2. Сравнение результатов:
  - Порог 95.0: 100.0% точек выше порога
  - Порог 100.0: 88.0% точек выше порога
  - Порог 105.0: 83.0% точек выше порога
10.3. Экспорт результатов:
  - Сводка экспортирована в multiple_analysis_results.csv
  - Размер файла: 332 байт
  - Содержимое экспорта:
           analysis_type  threshold  total_points  above_threshold  above_threshold_pct   avg_price  price_volatility
0  custom_price_analysis       95.0           100              100                100.0  111.326503           6.69664
1  custom_price_analysis      100.0           100               88                 88.0  111.326503           6.69664
2  custom_price_analysis      105.0           100               83                 83.0  111.326503           6.69664
  - Тестовый файл удален
[OK] Integration and export completed successfully
================================================================================
[STEP] STEP 11: Завершение
------------------------------
[INFO] Демонстрация базовых классов bquant.analysis завершена
Изучены:
  ✓ AnalysisResult - для хранения результатов анализа
  ✓ BaseAnalyzer - базовый класс для всех анализаторов
  ✓ Пользовательские анализаторы на основе BaseAnalyzer
  ✓ Фабрика анализаторов и получение списка доступных
  ✓ Валидация и подготовка данных
  ✓ Экспорт результатов анализа

Готово к созданию специализированных анализаторов!

[END] Script finished successfully!
[END] Log ended: 2025-10-27 10:28:09
[TIME] Duration: 0:00:02.850556
